// <auto-generated />
using System;
using CdSamling.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CdSamling.Migrations
{
    [DbContext(typeof(CollectionContext))]
    [Migration("20230212133301_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("CdSamling.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtistName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("CdSamling.Models.ArtistCollection", b =>
                {
                    b.Property<int>("ArtistCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollectiontId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArtistCollectionId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("RentId");

                    b.ToTable("ArtistCollection");
                });

            modelBuilder.Entity("CdSamling.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Release")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Collection");
                });

            modelBuilder.Entity("CdSamling.Models.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RentName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentdDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("CdSamling.Models.ArtistCollection", b =>
                {
                    b.HasOne("CdSamling.Models.Artist", "Artist")
                        .WithMany("ArtistCollections")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CdSamling.Models.Collection", "Collection")
                        .WithMany("ArtistCollections")
                        .HasForeignKey("CollectionId");

                    b.HasOne("CdSamling.Models.Rent", null)
                        .WithMany("ArtistCollections")
                        .HasForeignKey("RentId");

                    b.Navigation("Artist");

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("CdSamling.Models.Artist", b =>
                {
                    b.Navigation("ArtistCollections");
                });

            modelBuilder.Entity("CdSamling.Models.Collection", b =>
                {
                    b.Navigation("ArtistCollections");
                });

            modelBuilder.Entity("CdSamling.Models.Rent", b =>
                {
                    b.Navigation("ArtistCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
